// ----------------
//     MIXINS
// ----------------

// reset margin&padding
@mixin resetPaddingMargin
{
    margin: 0!important;
    padding: 0;
}

// box-sizing
@mixin box-sizing($type) {
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    box-sizing: $type;
}

// clearfix
@mixin clearfix {
    &:before,
    &:after {
        content:" ";
        display:table;
    }

    &:after {
        clear:both;
    }

    & {
        *zoom:1;
    }
}

// background-property

@mixin backgroundImg($url, $position, $size, $repeat: no-repeat)
{
    $imagesPath: "../images/";
    background: url(#{$imagesPath}#{$url}.jpg);
    background-position: $position;
    background-size: $size;
    background-repeat: $repeat;
}

@mixin size($w, $h) {
    width: $w;
    height: $h;
}

@mixin centerPostion {
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
}

@mixin animations($name, $t_duration, $count, $delay:0, $fmode: none) {
    animation-name: $name;
    animation-duration: $t_duration;
    animation-iteration-count: $count;
    animation-delay: $delay;
    animation-fill-mode: $fmode;
    -webkit-animation-name: $name;
    -webkit-animation-duration: $t_duration;
    -webkit-animation-iteration-count: $count;
    -webkit-animation-delay: $delay;
    -webkit-animation-fill-mode: $fmode;
}

// Transitions
@mixin transition($props: all, $speed: 0.5s, $easing: linear) {
    -webkit-transition: $props $speed $easing;
    -moz-transition: $props $speed $easing;
    -o-transition: $props $speed $easing;
    -ms-transition: $props $speed $easing;
    transition: $props $speed $easing;
}

// Transform
@mixin transformScale($param) {
    -webkit-transform: scale($param);
    -moz-transform: scale($param);
    -o-transform: scale($param);
    -ms-transform: scale($param);
    transform: scale($param);
}